
package introsde.assignment3.soap.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "People", targetNamespace = "http://ws.soap.assignment3.introsde/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface People {


    /**
     * 
     * @return
     *     returns java.util.List<introsde.assignment3.soap.ws.Person>
     */
    @WebMethod
    @WebResult(name = "people", targetNamespace = "")
    @RequestWrapper(localName = "getPeopleList", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.GetPeopleList")
    @ResponseWrapper(localName = "getPeopleListResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.GetPeopleListResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/getPeopleListRequest", output = "http://ws.soap.assignment3.introsde/People/getPeopleListResponse")
    public List<Person> getPeopleList();

    /**
     * 
     * @param personId
     * @return
     *     returns introsde.assignment3.soap.ws.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "http://ws.soap.assignment3.introsde/")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPersonResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/readPersonRequest", output = "http://ws.soap.assignment3.introsde/People/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId);

    /**
     * 
     * @param persona
     * @return
     *     returns introsde.assignment3.soap.ws.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "http://ws.soap.assignment3.introsde/")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.UpdatePersonResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/updatePersonRequest", output = "http://ws.soap.assignment3.introsde/People/updatePersonResponse")
    public Person updatePerson(
        @WebParam(name = "persona", targetNamespace = "")
        Person persona);

    /**
     * 
     * @param persona
     * @return
     *     returns introsde.assignment3.soap.ws.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "http://ws.soap.assignment3.introsde/")
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.CreatePersonResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/createPersonRequest", output = "http://ws.soap.assignment3.introsde/People/createPersonResponse")
    public Person createPerson(
        @WebParam(name = "persona", targetNamespace = "")
        Person persona);

    /**
     * 
     * @param person
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "personId", targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.DeletePersonResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/deletePersonRequest", output = "http://ws.soap.assignment3.introsde/People/deletePersonResponse")
    public int deletePerson(
        @WebParam(name = "person", targetNamespace = "")
        Long person);

    /**
     * 
     * @param personId
     * @param activityType
     * @return
     *     returns java.util.List<introsde.assignment3.soap.ws.Activity>
     */
    @WebMethod
    @WebResult(name = "activities", targetNamespace = "")
    @RequestWrapper(localName = "readPersonPreferences", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPersonPreferences")
    @ResponseWrapper(localName = "readPersonPreferencesResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPersonPreferencesResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/readPersonPreferencesRequest", output = "http://ws.soap.assignment3.introsde/People/readPersonPreferencesResponse")
    public List<Activity> readPersonPreferences(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activityType", targetNamespace = "")
        String activityType);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.assignment3.soap.ws.Activity>
     */
    @WebMethod
    @WebResult(name = "activities", targetNamespace = "")
    @RequestWrapper(localName = "readPreferences", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPreferences")
    @ResponseWrapper(localName = "readPreferencesResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPreferencesResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/readPreferencesRequest", output = "http://ws.soap.assignment3.introsde/People/readPreferencesResponse")
    public List<Activity> readPreferences();

    /**
     * 
     * @param activityId
     * @param personId
     * @return
     *     returns introsde.assignment3.soap.ws.Activity
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "http://ws.soap.assignment3.introsde/")
    @RequestWrapper(localName = "readPersonPreference", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPersonPreference")
    @ResponseWrapper(localName = "readPersonPreferenceResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.ReadPersonPreferenceResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/readPersonPreferenceRequest", output = "http://ws.soap.assignment3.introsde/People/readPersonPreferenceResponse")
    public Activity readPersonPreference(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activityId", targetNamespace = "")
        Long activityId);

    /**
     * 
     * @param activity
     * @param personId
     */
    @WebMethod
    @RequestWrapper(localName = "savePersonPreference", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.SavePersonPreference")
    @ResponseWrapper(localName = "savePersonPreferenceResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.SavePersonPreferenceResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/savePersonPreferenceRequest", output = "http://ws.soap.assignment3.introsde/People/savePersonPreferenceResponse")
    public void savePersonPreference(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activity", targetNamespace = "http://ws.soap.assignment3.introsde/")
        Activity activity);

    /**
     * 
     * @param activitya
     * @param personId
     * @return
     *     returns introsde.assignment3.soap.ws.Activity
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "http://ws.soap.assignment3.introsde/")
    @RequestWrapper(localName = "updatePersonPreference", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.UpdatePersonPreference")
    @ResponseWrapper(localName = "updatePersonPreferenceResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.UpdatePersonPreferenceResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/updatePersonPreferenceRequest", output = "http://ws.soap.assignment3.introsde/People/updatePersonPreferenceResponse")
    public Activity updatePersonPreference(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activitya", targetNamespace = "")
        Activity activitya);

    /**
     * 
     * @param activitya
     * @param personId
     * @param value
     * @return
     *     returns introsde.assignment3.soap.ws.Activity
     */
    @WebMethod
    @WebResult(name = "activityId", targetNamespace = "")
    @RequestWrapper(localName = "evaluatePersonPreferences", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.EvaluatePersonPreferences")
    @ResponseWrapper(localName = "evaluatePersonPreferencesResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.EvaluatePersonPreferencesResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/evaluatePersonPreferencesRequest", output = "http://ws.soap.assignment3.introsde/People/evaluatePersonPreferencesResponse")
    public Activity evaluatePersonPreferences(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activitya", targetNamespace = "")
        Activity activitya,
        @WebParam(name = "value", targetNamespace = "")
        int value);

    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<introsde.assignment3.soap.ws.Activity>
     */
    @WebMethod
    @WebResult(name = "activities", targetNamespace = "")
    @RequestWrapper(localName = "getBestPersonPreference", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.GetBestPersonPreference")
    @ResponseWrapper(localName = "getBestPersonPreferenceResponse", targetNamespace = "http://ws.soap.assignment3.introsde/", className = "introsde.assignment3.soap.ws.GetBestPersonPreferenceResponse")
    @Action(input = "http://ws.soap.assignment3.introsde/People/getBestPersonPreferenceRequest", output = "http://ws.soap.assignment3.introsde/People/getBestPersonPreferenceResponse")
    public List<Activity> getBestPersonPreference(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId);

}
